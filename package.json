{
  "name": "cfd-dlc-js",
  "version": "0.0.0",
  "description": "cfd-dlc node.js api",
  "scripts": {
    "preinstall": "",
    "install": "run-s cmake_clean cmake_install_configure cmake_compile",
    "cmake_compile": "cmake-js compile -O wrap_js/build",
    "cmake_install_configure": "run-script-os",
    "cmake_install_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_TESTS=off",
    "cmake_install_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_TESTS=off --CDTARGET_RPATH=\"./build/Release;./wrap_js/build/Release\" -g",
    "cmake_install_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_TESTS=off --CDTARGET_RPATH=\"@loader_path;./build/Release;./wrap_js/build/Release\" -C",
    "test": "jest --no-cache",
    "test_watch": "jest --no-cache --watch",
    "test_quiet": "jest --no-cache --silent",
    "test_logging": "jest --no-cache --silent=false --verbose false",
    "test_report": "cross-env JEST_JUNIT_OUTPUT_DIR=./reports/jest jest  --reporters=default --reporters=jest-junit",
    "test_integration": "jest --config jest.integration.config.js",
    "format_all": "run-p code_format ts_format",
    "code_format": "clang-format -i --style=file src/*.cpp src/*.h include/cfddlcjs/*.h",
    "ts_format": "tslint -c tslint.json 'wrap_js/**/*.ts' 'integration_tests/__tests__/**/*.ts' --fix",
    "cmake_all": "run-s cmake_configure cmake_build",
    "cmake_configure": "run-script-os",
    "cmake_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_TESTS=off",
    "cmake_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_TESTS=off --CDTARGET_RPATH=./wrap_js/build/Release -g",
    "cmake_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_TESTS=off --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Release\" -C",
    "cmake_quiet": "run-s cmake_quiet_configure cmake_quiet_build",
    "cmake_quiet_configure": "run-script-os",
    "cmake_quiet_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on -i",
    "cmake_quiet_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=./wrap_js/build/Release -g -i",
    "cmake_quiet_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Release\" -C -i",
    "cmake_log_all": "run-s cmake_log_configure cmake_build",
    "cmake_log_configure": "run-script-os",
    "cmake_log_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDCFDCORE_DEBUG=on",
    "cmake_log_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=./wrap_js/build/Release --CDCFDCORE_DEBUG=on -g",
    "cmake_log_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Release\" --CDCFDCORE_DEBUG=on -C",
    "cmake_con_all": "run-s cmake_con_configure cmake_build",
    "cmake_con_configure": "run-script-os",
    "cmake_con_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDCFDCORE_DEBUG=on --CDCFDCORE_LOG_CONSOLE=on",
    "cmake_con_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=./wrap_js/build/Release --CDCFDCORE_DEBUG=on --CDCFDCORE_LOG_CONSOLE=on -g",
    "cmake_con_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Release\" --CDCFDCORE_DEBUG=on --CDCFDCORE_LOG_CONSOLE=on -C",
    "cmake_debug_all": "run-s cmake_debug_configure cmake_debug_build",
    "cmake_debug_configure": "run-script-os",
    "cmake_debug_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on -D",
    "cmake_debug_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=./wrap_js/build/Debug -g -D",
    "cmake_debug_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Debug\" -C -D",
    "cmake_gcov_all": "run-s cmake_gcov_configure cmake_debug_build",
    "cmake_gcov_configure": "run-script-os",
    "cmake_gcov_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_COVERAGE=on -D",
    "cmake_gcov_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_COVERAGE=on --CDTARGET_RPATH=./wrap_js/build/Debug -g -D",
    "cmake_gcov_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDENABLE_COVERAGE=on --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Debug\" -C -D",
    "cmake_clang": "run-s cmake_clang_configure cmake_build",
    "cmake_clang_configure": "run-script-os",
    "cmake_clang_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on -C",
    "cmake_clang_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=./wrap_js/build/Release -C",
    "cmake_clang_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=on --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Release\" -C",
    "cmake_static": "run-s cmake_static_configure cmake_build",
    "cmake_static_configure": "run-script-os",
    "cmake_static_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off",
    "cmake_static_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDTARGET_RPATH=./wrap_js/build/Release -g",
    "cmake_static_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Release\" -C",
    "cmake_static_debug": "run-s cmake_static_debug_configure cmake_debug_build",
    "cmake_static_debug_configure": "run-script-os",
    "cmake_static_debug_configure:win32": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDCFDCORE_DEBUG=on -D",
    "cmake_static_debug_configure:linux": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDCFDCORE_DEBUG=on --CDTARGET_RPATH=./wrap_js/build/Release -g -D",
    "cmake_static_debug_configure:darwin": "cmake-js configure -O wrap_js/build --CDENABLE_SHARED=off --CDCFDCORE_DEBUG=on --CDTARGET_RPATH=\"@loader_path;./wrap_js/build/Release\" -C -D",
    "cmake_build": "cmake-js build -O wrap_js/build",
    "cmake_debug_build": "cmake-js build -O wrap_js/build -D",
    "cmake_quiet_build": "cmake-js build -O wrap_js/build -i",
    "cmake_clean": "cmake-js clean -O wrap_js/build",
    "tslint_check": "tslint -c tslint.json 'wrap_js/**/*.ts' 'integration_tests/**/*.ts' --quiet",
    "convert_json": "babel-node ./tools/generate_json_map_class.js --presets env",
    "convert_json_debug": "babel-node ./tools/generate_json_map_class.js mode=debug --presets env"
  },
  "author": "Crypto Garage Inc.",
  "license": "MIT",
  "gypfile": false,
  "dependencies": {
    "big-integer": "^1.6.26",
    "cmake-js": "^5.3.2",
    "nan": "^2.14.0",
    "node-addon-api": "^1.6.3",
    "node-gyp": "^5.0.2",
    "npm-run-all": "^4.1.5",
    "run-script-os": "^1.0.5"
  },
  "devDependencies": {
    "@types/jest": "^25.1.4",
    "@types/node": "^13.9.0",
    "@typescript-eslint/eslint-plugin": "^2.19.0",
    "@typescript-eslint/parser": "^2.19.0",
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "cfd-js": "github:cryptogarageinc/cfd-js#v0.0.21",
    "cross-env": "^7.0.2",
    "eslint": "^6.5.1",
    "eslint-config-google": "^0.14.0",
    "jest": "^25.4.0",
    "jest-junit": "^10.0.0",
    "prettier": "^2.0.4",
    "ts-jest": "^25.3.0",
    "ts-morph": "^6.0.2",
    "ts-node": "^8.6.2",
    "tslint": "^6.1.1",
    "tslint-plugin-prettier": "^2.3.0",
    "typescript": "^3.8.3",
    "wallet-for-testing-js": "git+https://github.com/cryptogarageinc/wallet-for-testing-js#v0.0.3"
  }
}
